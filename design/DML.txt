INSERT INTO category VALUES(0, "없음");

INSERT INTO member VALUES
(default, "qlkjds124", "뿌까뿌", "asdkafs", "qlkjds124@naver.com", default, NULL);

INSERT INTO member VALUES
(DEFAULT, "dkqmfk", "아브라카다브라", "klrjdfa", "dkqmfk@daum.net", DEFAULT, NULL);

INSERT INTO member VALUES
(DEFAULT, "qkrwnsrb", "박준규", "qkrwnsrb", "qkrwnsrb@daum.net", DEFAULT, NULL);


INSERT INTO reply VALUES(default, default, default, "ㅋㅋㅋㅋㅋㅋㅋ", default, 6, 3);
INSERT INTO reply VALUES(default, default, default, "머래", default, 6, 10);
INSERT INTO reply VALUES(default, default, default, "이게 먼솔?", default, 6, 11);
INSERT INTO reply VALUES(default, 3, default, "ㅋㅋㅋㅋㅋㅋㅋ", default, 6, 2);
INSERT INTO reply VALUES(default, 1, default, "아니 ㅡㅡ뭐여", default, 6, 9);
INSERT INTO reply VALUES(default, 1, 1, "ㅋㅋㅋㅋ앜ㅋㅋㅋㅋ", default, 6, 3);

INSERT INTO reply VALUES(default, default, default, "나도 테스트", default, 3, 2);
INSERT INTO reply VALUES(default, 7, default, "나도 테스트1", default, 3, 3);
INSERT INTO reply VALUES(default, 0, 1, "나도 테스트2", default, 3, 2);
INSERT INTO reply VALUES(default, 0, 0, "형 지나가다 뒤통수 조심하세요.", default, 16, 21);


SELECT board_id, category_name AS category, title, 
M.nickname AS writer, B.date, likes, views, ifnull(rp, 0) AS replies
FROM board AS B
LEFT JOIN member AS M ON(B.writer = M.member_id)
LEFT JOIN category AS C ON(B.category = C.category_id)
LEFT JOIN (select board, count(*) AS rp from reply group by board) AS R
ON(B.board_id = R.board)
ORDER BY board_id desc;

SELECT
reply_id, parent, sorts, content, date, member_id, nickname, profile_photo, board
FROM reply AS R
LEFT JOIN member AS M ON(R.writer = M.member_id)
ORDER BY parent, reply_id;


SELECT * FROM reply ORDER BY parent, reply_id;

UPDATE reply SET parent = reply_id WHERE parent=0;

SELECT * FROM (SELECT * FROM board list WHERE board_id < 16 ORDER BY board_id desc LIMIT 1) A
UNION
SELECT * FROM (SELECT * FROM board list WHERE board_id > 16 ORDER BY board_id asc LIMIT 1) B;

SELECT * FROM (SELECT * FROM board WHERE board_id < 16 ORDER BY board_id desc LIMIT 1) A
UNION
SELECT * FROM (SELECT * FROM board WHERE board_id > 16 ORDER BY board_id asc LIMIT 1) B;


CREATE TRIGGER insertReplyTrigger
AFTER INSERT 
ON reply 
FOR EACH ROW
UPDATE reply SET NEW.parent = NEW.reply_id 
WHERE NEW.parent = 0;

SELECT member_id, id, nickname, attendance, profile_photo, 
       ifnull(nob, 0) AS board_num, ifnull(nor, 0) AS reply_num
FROM member AS M
LEFT JOIN (SELECT writer, COUNT(*) AS nob FROM board GROUP BY writer) AS B 
ON(M.member_id = B.writer)
LEFT JOIN (SELECT writer, COUNT(*) AS nor FROM reply GROUP BY writer) AS R
ON(M.member_id = R.writer);
