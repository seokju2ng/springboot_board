### TABLE LIST ###

CREATE TABLE member (
member_id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
id VARCHAR(20) NOT NULL UNIQUE,
nickname VARCHAR(20) NOT NULL,
pwd CHAR(64) NOT NULL,
email VARCHAR(50) NOT NULL,
attendance INT UNSIGNED NOT NULL DEFAULT 0,
profile_photo VARCHAR(30) DEFAULT NULL
)ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE category (
category_id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
category_name VARCHAR(10) NOT NULL
)ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE board (
board_id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
title VARCHAR(60) NOT NULL,
content TEXT NOT NULL,
date DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
likes INT UNSIGNED NOT NULL DEFAULT 0,
views INT UNSIGNED NOT NULL DEFAULT 0,
writer INT UNSIGNED NOT NULL,
category INT UNSIGNED NOT NULL,
FOREIGN KEY (writer) REFERENCES member(member_id)
ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (category) REFERENCES category(category_id)
ON DELETE CASCADE ON UPDATE CASCADE
)ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE reply (
reply_id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
parent INT UNSIGNED NOT NULL DEFAULT 0,
sorts INT UNSIGNED NOT NULL DEFAULT 0,
content TEXT NOT NULL,
date DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
board INT UNSIGNED NOT NULL,
writer INT UNSIGNED NOT NULL,
FOREIGN KEY (board) REFERENCES board(board_id)
ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (writer) REFERENCES memberca(member_id)
ON DELETE CASCADE ON UPDATE CASCADE
)ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE member_like_board (
mlb_id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
member_id INT UNSIGNED NOT NULL,
board_id INT UNSIGNED NOT NULL,
FOREIGN KEY (member_id) REFERENCES member(member_id)
ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (board_id) REFERENCES board(board_id)
ON DELETE CASCADE ON UPDATE CASCADE,
UNIQUE KEY unique_index(member_id, board_id)
)ENGINE=InnoDB DEFAULT CHARSET=utf8;




### VIEW LIST ###

CREATE VIEW boardlist AS
SELECT 
board_id, category_name AS category, title, content, B.date, M.member_id AS writer_id, 
M.nickname AS writer_nick, profile_photo, ifnull(MLB.likes, 0) AS likes, views, ifnull(rp, 0) AS replies
FROM board AS B
LEFT JOIN member AS M 
ON(B.writer = M.member_id)
LEFT JOIN category AS C 
ON(B.category = C.category_id)
LEFT JOIN (select board, count(*) AS rp from reply group by board) AS R 
ON(B.board_id = R.board)
LEFT JOIN (select board_id, count(*) AS likes from member_like_board group by board_id) AS MLB
USING(board_id)
ORDER BY board_id desc;

CREATE VIEW replylist AS
SELECT
reply_id, parent, sorts, content, date, member_id, nickname, profile_photo, board
FROM reply AS R
LEFT JOIN member AS M ON(R.writer = M.member_id)
ORDER BY parent, reply_id;






